app.handles.lambda = 5.3e-9;
app.handles.detDistance = 0.22;
app.handles.gain = 1;
app.handles.detDistArray = [52, 216, 416; 0.150, 0.200 ,0.220]; % first run (1st row) with detector distance (2nd row)
app.handles.gainArray = [1, 117, 168, 196, 203, 205, 220, 227, 229, 278, 288, 308, 314, 319, 350; 1,   4,  16,   4,  16,  64,  16,   1,   4,  64,  16,  64,  16,  64,  16];

app.handles.detPixelsize = 75e-6;
app.handles.load_mask = true;
app.handles.rotatePNCCD = false;

app.handles.minScale = -.05;
app.handles.maxScale = .05;
app.handles.colormap = 'gray';
app.handles.centroids = [0,0];
app.handles.phase = 0;
app.handles.phaseLimit = 100000;
app.handles.phaseOffset = 0;
app.handles.HPfiltering = false;
app.handles.LPfiltering = false;
app.handles.HPfrequency = 50;
app.handles.LPfrequency = 500;
app.handles.clusterradius = 30;
app.handles.cut_center = 1;

app.handles.img_offset = 0;
app.handles.add_slit = 0;
app.handles.add_shift = 0;
app.handles.xcenter = 0;
app.handles.ycenter = 0;
app.handles.adu_min = 0;
app.handles.adu_max = 12000;
app.handles.do_cm = false;
app.handles.cm_thresh = 35; % to be devided by gain
app.handles.photon_adu = nan;
app.handles.photon_min = .5;
app.handles.cluster_material = 'Kr';
app.handles.decon_profile = 'mie';
app.handles.mie_precision = 50000;
app.handles.scat_ratio = -2;
app.handles.gpu = false;

app.handles.center(438).data = [2, -5];